#!/usr/bin/env ruby
require 'optparse'
require 'resolv'
require 'terminal-table'
require_relative 'lib/build_inspector'
require_relative 'lib/configuration'
require_relative 'lib/evidence_collector'
require_relative 'lib/evidence_processor'
require_relative 'lib/packet_inspector'
require_relative 'lib/printer'
require_relative 'lib/vagrant_whisperer'

# Don't buffer output. Flush immediately.
$stdout.sync = true

options = {
  rollback: true
}

optparse = OptionParser.new do |opts|
  opts.banner = "Usage #{File.basename($0)} [options] <git repo URL>"
  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end

  opts.on('-n', '--no-rollback',
          'Do not roll back the virtual machine state after running') do
    options[:rollback] = false
  end
end

optparse.parse!

if ARGV.size < 1
  puts 'Must specifiy a repository URL'
  puts optparse.help
  exit(-1)
end
repo_url = ARGV.first

whisperer = VagrantWhisperer.new
config = Configuration.new('.inspect.yml')
inspector = BuildInspector.new(whisperer: whisperer, repo_url: repo_url,
                               commands: config.commands, evidence_files: config.evidence_files,
                               rollback: options[:rollback])

whisperer.snapshot

inspector.inspect

repo_url = ARGV.first
repo_name = repo_url.split('/').last.chomp('.git')
evidence_name = "evidence-#{repo_name}-#{Time.now.strftime('%Y%m%d%H%M%S')}"
collector = EvidenceCollector.new(whisperer: whisperer, evidence_name: evidence_name)
puts Printer.yellowify('Collecting evidence ...')
collector.collect

whisperer.rollback if options[:rollback]

processor = EvidenceProcessor.new(evidence_path: evidence_name,
                                  vagrant_ip: whisperer.ip_address,
                                  host_whitelist: config.host_whitelist)
processor.process
